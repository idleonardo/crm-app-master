  const exportResultsToPDF = async () => {
  if (!result) return;

  const pdf = new jsPDF('p', 'mm', 'letter');
  const marginLeft = 15;
  const marginRight = 15;
  const marginTop = 40; // dejamos espacio para encabezado
  let y = marginTop;
  const pageWidth = pdf.internal.pageSize.getWidth();
  const usableWidth = pageWidth - marginRight - marginLeft;

  // === Fecha ===
  pdf.setFontSize(10);
  pdf.text(`Fecha: ${new Date().toLocaleString()}`, marginLeft, y);
  y += 12;

  // === Datos de entrada ===
  pdf.setFontSize(14);
  pdf.text('Datos de entrada', marginLeft, y);
  y += 2;
  pdf.setDrawColor(100);
  pdf.setLineWidth(0.3);
  pdf.line(marginLeft, y, pageWidth - marginRight, y);
  y += 4;

  pdf.setFontSize(11);
  const entradas = [
    `Sistema: ${
      result.systemType === 'monofasico'
        ? 'Monofásico a 2 Hilos'
        : result.systemType === 'bifasico'
        ? 'Monofásico a 3 Hilos/Bifásico'
        : 'Trifásico a 3 Hilos'
    }`,
    `Potencia total (Wtot): ${result.power} W`,
    `Tensión (En): ${result.voltage} V`,
    `Factor de potencia (Cosθ): ${result.powerFactor}`,
    `Factor de demanda (FD): ${result.demandFactor}`,
    `Tipo de aislamiento: ${result.insulationType}`,
    `Tipo de instalación: ${result.installationType === 'interior' ? 'Interior' : 'Intemperie'}`,
    `Número de conductores: ${result.numberOfConductors}`,
    `Tipo de tubería: ${result.conduitType.replace(/_/g, ' ')}`
  ];
  entradas.forEach((line) => {
    pdf.text(`• ${line}`, marginLeft + 2, y);
    y += 6;
  });

  // === Resultados ===
  y += 4;
  pdf.setFontSize(14);
  pdf.text('Resultados', marginLeft, y);
  y += 2;
  pdf.setLineWidth(0.3);
  pdf.line(marginLeft, y, pageWidth - marginRight, y);
  y += 4;

  pdf.setFontSize(11);
  const resultados: string[] = [
    `Corriente (I): ${result.current.toFixed(2)} A`,
    `Corriente corregida (Ic): ${result.correctedCurrent.toFixed(2)} A`
  ];
  if (result.method === 'current') {
    resultados.push(`Corriente de protección (Ip): ${(result as any).protectionCurrent.toFixed(2)} A`);
  } else {
    resultados.push(`Sección del conductor (S): ${(result as any).section.toFixed(2)} mm²`);
  }
  resultados.push(
    `Calibre AWG recomendado: ${result.awg}`,
    `Área total conductores: ${result.conductorArea.toFixed(2)} mm²`,
    `Tubería recomendada: ${result.conduitSize}`,
    `Interruptor termomagnético: ${result.circuitBreaker}`
  );
  resultados.forEach((line) => {
    pdf.text(`• ${line}`, marginLeft + 2, y);
    y += 6;
  });

  // === Fórmulas ===
  if (formulaSteps.length > 0) {
    y += 4;
    pdf.setFontSize(14);
    pdf.text('Desarrollo de las fórmulas', marginLeft, y);
    y += 2;
    pdf.line(marginLeft, y, pageWidth - marginRight, y);
    y += 6;

    for (const step of formulaSteps) {
      const temp = document.createElement('div');
      temp.style.display = 'inline-block';
      temp.style.background = 'white';
      temp.innerHTML = katex.renderToString(step, {
        throwOnError: false,
        displayMode: true
      });
      document.body.appendChild(temp);

      await new Promise((resolve) => requestAnimationFrame(resolve));
      const dataUrl = await toPng(temp, { pixelRatio: 4 });
      document.body.removeChild(temp);

      const desiredWidth = usableWidth * 0.3;
      const imgProps = (pdf as any).getImageProperties(dataUrl);
      const imgHeight = (imgProps.height * desiredWidth) / imgProps.width;

      if (y + imgHeight > pdf.internal.pageSize.getHeight() - 20) {
        pdf.addPage();
        y = marginTop;
      }

      pdf.addImage(dataUrl, 'PNG', marginLeft, y, desiredWidth, imgHeight);
      y += imgHeight + 8;
    }
  }

  // === Nota final ===
  y += 4;
  const noteText =
    result.method === 'current'
      ? 'Nota: Este cálculo determina la corriente y protección necesaria. Para dimensionamiento completo del conductor, considera también la caída de tensión.'
      : 'Nota: Este cálculo considera la caída de tensión máxima permitida. Verifica también la capacidad de corriente del conductor seleccionado.';

  const noteHeight = 16;
  pdf.setFillColor(245, 245, 245);
  pdf.rect(marginLeft, y - 2, usableWidth, noteHeight, 'F');
  pdf.setTextColor(200, 0, 0);
  pdf.setFontSize(12);
  pdf.text(noteText, marginLeft + 2, y + 4, { maxWidth: usableWidth - 4 });

  // === Encabezado y numeración en todas las páginas ===
  const totalPages = (pdf as any).internal.pages.length - 1;
  for (let i = 1; i <= totalPages; i++) {
    pdf.setPage(i);

    // Encabezado con logo y título
    pdf.addImage("/logoPng.png", "PNG", pageWidth - marginRight - 80, 5, 80, 30);
    pdf.setFontSize(18);
    pdf.setTextColor(0, 0, 0);
    pdf.text('Cálculo de Conductores Eléctricos', marginLeft, 30);
    pdf.setDrawColor(100);
    pdf.line(marginLeft, 35, pageWidth - marginRight, 35);

    // Numeración al pie
    const pHeight = pdf.internal.pageSize.getHeight();
    pdf.setFontSize(10);
    pdf.setTextColor(100);
    pdf.text(`Página ${i} de ${totalPages}`, pageWidth / 2, pHeight - 10, { align: 'center' });
  }

  // === Abrir en nueva pestaña ===
  const blobUrl = pdf.output('bloburl');
  window.open(blobUrl, '_blank');
};

  // Tipo auxiliar (opcional)